//----------------------------------*-C++-*-----------------------------------//
/**
 *  @file  AbuShumaysDoubleRange.cc
 *  @brief AbuShumaysDoubleRange member definitions
 *  @note  Copyright (C) 2013 Jeremy Roberts
 */
//----------------------------------------------------------------------------//

#include "AbuShumaysDoubleRange.hh"
#include "utilities/SoftEquivalence.hh"
#include <cmath>

namespace detran_angle
{

//----------------------------------------------------------------------------//
void AbuShumaysDoubleRange::build_impl(c_dbl a, c_dbl b)
{
  Insist(d_m / 2 < 16, "A-S D-R is for 15 or fewer points");
  Insist(detran_utilities::soft_equiv(a, -1.0) &&
         detran_utilities::soft_equiv(b,  1.0),
         "A-S D-R is defined only for polar angles, [-1, 1].");

  int m = d_m / 2;
  for (int i = 0; i < m; ++i)
  {
    double x = std::sqrt(1.0 - get_theta(m, 0, i) * get_theta(m, 0, i));
    double w = 0.5 * get_theta(m, 1, i);
    d_x[i      ] = -x;
    d_x[d_m-i-1] =  x;
    d_w[i      ] =  w;
    d_w[d_m-i-1] =  w;
  }
}

//----------------------------------------------------------------------------//
double AbuShumaysDoubleRange::
get_theta(const size_t N, const size_t i, const size_t j)
{
  double a[15];
  double b[15];
  if (N == 1)
  {
    a[0] = 0.7853981633974483;
    b[0] = 0.2E1;
  }
  else if (N == 2)
  {
    a[0] = 0.3993735638823956;
    a[1] = 0.9144479484659753;
    b[0] = 0.5010918381152245;
    b[1] = 0.1498908161884776E1;
  }
  else if (N == 3)
  {
    a[0] = 0.2311522961278847;
    a[1] = 0.6399711962340753;
    a[2] = 0.9544967673433067;
    b[0] = 0.1706016479452537;
    b[1] = 0.6829125158656247;
    b[2] = 0.1146485836189122E1;
  }
  else if (N == 4)
  {
    a[0] = 0.149249146573134;
    a[1] = 0.4452174134055993;
    a[2] = 0.7657198751837065;
    a[3] = 0.971840383889606;
    b[0] = 0.7210020864182995E-1;
    b[1] = 0.3302019567476854;
    b[2] = 0.6776788331337992;
    b[3] = 0.9200190014766855;
  }
  else if (N == 5)
  {
    a[0] = 0.1039469054750266;
    a[1] = 0.3218997600306228;
    a[2] = 0.5925641316724047;
    a[3] = 0.8367574981862629;
    a[4] = 0.9808766137326722;
    b[0] = 0.3530233934872431E-1;
    b[1] = 0.1745260006417964;
    b[2] = 0.3987720643885643;
    b[3] = 0.6254719597163901;
    b[4] = 0.7659276359045249;
  }
  else if (N == 6)
  {
    a[0] = 0.764222577018977E-1;
    a[1] = 0.2418380224706412;
    a[2] = 0.4624149310771195;
    a[3] = 0.69176378901922;
    a[4] = 0.8801887364309769;
    a[5] = 0.9861717557161557;
    b[0] = 0.1920436605371306E-1;
    b[1] = 0.9964572033500919E-1;
    b[2] = 0.243394408480036;
    b[3] = 0.415494935541075;
    b[4] = 0.5670894260317977;
    b[5] = 0.655171143558369;
  }
  else if (N == 7)
  {
    a[0] = 0.5849788427341292E-1;
    a[1] = 0.1876744099204198;
    a[2] = 0.3673808738342405;
    a[3] = 0.5691413298688445;
    a[4] = 0.76007398923149;
    a[5] = 0.9084990189032058;
    a[6] = 0.9895378462166649;
    b[0] = 0.1130288664498013E-1;
    b[1] = 0.6059668882540333E-1;
    b[2] = 0.1548577023350282;
    b[3] = 0.2795356837349958;
    b[4] = 0.408359039083128;
    b[5] = 0.5133389971363539;
    b[6] = 0.5720090022401106;
  }
  else if (N == 8)
  {
    a[0] = 0.4619235546732977E-1;
    a[1] = 0.1495785939929699;
    a[2] = 0.2974141685414306;
    a[3] = 0.4714033535759624;
    a[4] = 0.6494576043472951;
    a[5] = 0.8085613275367436;
    a[6] = 0.9279142834477891;
    a[7] = 0.9918094732391086;
    b[0] = 0.7070596107672168E-2;
    b[1] = 0.3879562306402765E-1;
    b[2] = 0.1024016241431204;
    b[3] = 0.1923042113259944;
    b[4] = 0.2943821042432288;
    b[5] = 0.3912388348106103;
    b[6] = 0.4664219853334316;
    b[7] = 0.5073850209719148;
  }
  else if (N == 9)
  {
    a[0] = 0.373871754313704E-1;
    a[1] = 0.1218673184482112;
    a[2] = 0.2449791366335987;
    a[3] = 0.3944837657444153;
    a[4] = 0.5551788717532553;
    a[5] = 0.7104369578733888;
    a[6] = 0.8440015993098882;
    a[7] = 0.9417816602325884;
    a[8] = 0.9934143180700493;
    b[0] = 0.4643065076049817E-2;
    b[1] = 0.259137055013675E-1;
    b[2] = 0.7006244894417409E-1;
    b[3] = 0.1354951021927222;
    b[4] = 0.2146387592743282;
    b[5] = 0.2967844729635604;
    b[6] = 0.3706102754254009;
    b[7] = 0.4260782931411163;
    b[8] = 0.4557738774812805;
  }
  else if (N == 10)
  {
    a[0] = 0.3087344674320983E-1;
    a[1] = 0.1011256691908164;
    a[2] = 0.2049120334874169;
    a[3] = 0.3337559301018391;
    a[4] = 0.47692469846783;
    a[5] = 0.6222949084152428;
    a[6] = 0.7574090067646704;
    a[7] = 0.8705939190886369;
    a[8] = 0.9520192454053205;
    a[9] = 0.9945898978711666;
    b[0] = 0.317192548389715E-2;
    b[1] = 0.1793256207590737E-1;
    b[2] = 0.4938267089469711E-1;
    b[3] = 0.9768026105928111E-1;
    b[4] = 0.1588277298633008;
    b[5] = 0.2262349688595732;
    b[6] = 0.29226033258076;
    b[7] = 0.3494452142568355;
    b[8] = 0.39143378370197;
    b[9] = 0.4136305512237778;
  }
  else if (N == 11)
  {
    a[0] = 0.259214348332132E-1;
    a[1] = 0.8521935262972822E-1;
    a[2] = 0.1737212859610505;
    a[3] = 0.2853788554402115;
    a[4] = 0.4124302930568668;
    a[5] = 0.545908389315292;
    a[6] = 0.6762815928489082;
    a[7] = 0.7941615804130648;
    a[8] = 0.8910104077090977;
    a[9] = 0.9597863457139877;
    a[10] = 0.9954766828497256;
    b[0] = 0.2239168223242646E-2;
    b[1] = 0.1278609020279452E-1;
    b[2] = 0.3571984407731606E-1;
    b[3] = 0.7192019606102708E-1;
    b[4] = 0.1193656258066426;
    b[5] = 0.1740015513470782;
    b[6] = 0.2306960076947862;
    b[7] = 0.2840568417450768;
    b[8] = 0.3290675185193199;
    b[9] = 0.3615644996448663;
    b[10] = 0.3785826566778497;
  }
  else if (N == 12)
  {
    a[0] = 0.2206987544161146E-1;
    a[1] = 0.7276548794207686E-1;
    a[2] = 0.1490240471276492;
    a[3] = 0.2464178213464814;
    a[4] = 0.3592090638180165;
    a[5] = 0.4806598424300749;
    a[6] = 0.6034329607303313;
    a[7] = 0.7200483966382738;
    a[8] = 0.8233578535894617;
    a[9] = 0.9070015920820176;
    a[10] = 0.9658155920819829;
    a[11] = 0.9961620595917704;
    b[0] = 0.1625008098812313E-2;
    b[1] = 0.9352495000167818E-2;
    b[2] = 0.2642849768723387E-1;
    b[3] = 0.5397608657841666E-1;
    b[4] = 0.9107347191808735E-1;
    b[5] = 0.1352375815741906;
    b[6] = 0.1830231517042723;
    b[7] = 0.2305709517590055;
    b[8] = 0.2740530323427262;
    b[9] = 0.3100184495077959;
    b[10] = 0.3356558712699347;
    b[11] = 0.3489854025593568;
  }
  else if (N == 13)
  {
    a[0] = 0.190157862781181E-1;
    a[1] = 0.6283891176988711E-1;
    a[2] = 0.1291669489733978;
    a[3] = 0.2146859046048244;
    a[4] = 0.3150698520346282;
    a[5] = 0.425176468911348;
    a[6] = 0.5393050111837124;
    a[7] = 0.6514970179728065;
    a[8] = 0.7558583950754834;
    a[9] = 0.846881415042289;
    a[10] = 0.9197467199541607;
    a[11] = 0.9705877364229169;
    a[12] = 0.9967027009889732;
    b[0] = 0.1207468708743215E-2;
    b[1] = 0.6993516363714714E-2;
    b[2] = 0.1994654540921309E-1;
    b[3] = 0.4121379610227348E-1;
    b[4] = 0.7048445872346682E-1;
    b[5] = 0.1062573893438944;
    b[6] = 0.1462194120104745;
    b[7] = 0.1876167252194712;
    b[8] = 0.2275704275088438;
    b[9] = 0.2633290245190361;
    b[10] = 0.2924659823505597;
    b[11] = 0.3130314389266094;
    b[12] = 0.3236638148136996;
  }
  else if (N == 14)
  {
    a[0] = 0.1655357842785945E-1;
    a[1] = 0.5480298212338539E-1;
    a[2] = 0.1129813228893869;
    a[3] = 0.1885598024182952;
    a[4] = 0.2782189669515478;
    a[5] = 0.3779758905459106;
    a[6] = 0.483354614232666;
    a[7] = 0.5895884420495059;
    a[8] = 0.6918416750813907;
    a[9] = 0.7854377100908073;
    a[10] = 0.8660809241804746;
    a[11] = 0.9300608506655752;
    a[12] = 0.9744285442429917;
    a[13] = 0.9971366642642528;
    b[0] = 0.9156938974039617E-3;
    b[1] = 0.5331012020952745E-2;
    b[2] = 0.1532101378791769E-1;
    b[3] = 0.3196191025679207E-1;
    b[4] = 0.5527736741151233E-1;
    b[5] = 0.8438398073696996E-1;
    b[6] = 0.1177312073753468;
    b[7] = 0.1533547657512768;
    b[8] = 0.1891023104848334;
    b[9] = 0.2228197138483984;
    b[10] = 0.2525002447442476;
    b[11] = 0.2764024505279778;
    b[12] = 0.293141514050202;
    b[13] = 0.3017568151061684;
  }
  else if (N == 15)
  {
    a[0] = 0.1453980971214771E-1;
    a[1] = 0.4820858869899936E-1;
    a[2] = 0.9962575637202815E-1;
    a[3] = 0.1668286525539518;
    a[4] = 0.247229707903158;
    a[5] = 0.3377013939031784;
    a[6] = 0.4346915962513905;
    a[7] = 0.5343624719763381;
    a[8] = 0.6327454393360694;
    a[9] = 0.7259042142853639;
    a[10] = 0.8100978365440864;
    a[11] = 0.8819361061028814;
    a[12] = 0.9385205574600149;
    a[13] = 0.9775649540709922;
    a[14] = 0.9974902738450473;
    b[0] = 0.7068830110205541E-3;
    b[1] = 0.4132909575263126E-2;
    b[2] = 0.1195308097311956E-1;
    b[3] = 0.2513687784360474E-1;
    b[4] = 0.4388448158131325E-1;
    b[5] = 0.6770273244117886E-1;
    b[6] = 0.9555753069484589E-1;
    b[7] = 0.1260476011692554;
    b[8] = 0.1575670106423901;
    b[9] = 0.1884437898269261;
    b[10] = 0.2170534569913444;
    b[11] = 0.2419105398978403;
    b[12] = 0.2617415950418412;
    b[13] = 0.2755422071013228;
    b[14] = 0.2826193032087338;
  }
  else
  {
    THROW("Unsupported value of N for theta.");
  }
  if (i == 0)
  {
    return a[j]; // return sin(theta_j)
  }
  else
  {
    return b[j]; // return w_j
  }

}

} // end namespace detran_angle

//----------------------------------------------------------------------------//
//              end of AbuShumaysDoubleRange.cc
//----------------------------------------------------------------------------//
